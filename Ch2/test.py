# -*- coding: utf-8 -*-
"""
Created on Sun Jan 24 20:24:56 2021

@author: NMDL
"""

# -*- coding: utf-8 -*-
"""
Created on Sun Jan 24 13:45:58 2021

@author: nickl
"""

from os import path
import random as rd

class ArrayToSort:

    trainingArray = [5, 2, 4, 6, 1, 3]

    def __init__(self, array=trainingArray):
        self.array = array
        self.length = len(self.array)

    def insertion_sort(self):
        for i in range(1, self.length):
            key = self.array[i]
            j = i-1
            while j+1 and self.array[j] > key:
                self.array[j+1] = self.array[j]
                j -= 1
            self.array[j+1] = key
        print(self.array)

    # @staticmethod
    # def generate_training_datafile(n):
    #     if not path.exists('Autogenerated_training_data.csv'):
    #         atd_file = open('Autogenerated_training_data.csv','w')
    #         for i in range(n-1):
    #             atd_file.write(str(rd.uniform(0,100)) + ', ' )
                
    #         atd_file.write(str(rd.uniform(0,100)))
    #         atd_file.close()
    #     else:
    #         pass
    def merge_sort(self):
        self.array 




    def random_array(self, length):
        self.length = length
        self.array = [rd.randrange(0,100) for i in range(length)]


